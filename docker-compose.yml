services:
  web:
    image: feiff/bkproj
    ports:
      - "8000:8000"
    # env_file:
    #   - .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      # - RABBIT_HOST=${RABBIT_HOST}
      # - RABBIT_PORT=${RABBIT_PORT}
      - PROJECT_ID=${PROJECT_ID}
      - TOPIC_ID=${TOPIC_ID}
      - SUBSCRIPTION_ID=${SUBSCRIPTION_ID}

      # Only for development
    #   - GOOGLE_APPLICATION_CREDENTIALS=/app/key.json
    # volumes:
    #   - ./key.json:/app/key.json


    depends_on:
      redis:
        condition: service_started
      # rabbitmq:
      #   condition: service_healthy
    volumes:
      - /var/log/gunicorn:/var/log/gunicorn
    networks:
      - app-network

  subscriber:
    image: feiff/subscriber
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      # - RABBIT_HOST=${RABBIT_HOST}
      # - RABBIT_PORT=${RABBIT_PORT}
      - PROJECT_ID=${PROJECT_ID}
      - TOPIC_ID=${TOPIC_ID}
      - SUBSCRIPTION_ID=${SUBSCRIPTION_ID}

        # Only for development
    #   - GOOGLE_APPLICATION_CREDENTIALS=/app/key.json
    # volumes:
    #   - ./key.json:/app/key.json


    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_started
      # rabbitmq:
      #   condition: service_healthy
    volumes:
      - /var/log/subscriber:/var/log/subscriber
    networks:
      - app-network

  # celery_worker:
  #   image: feiff/celery_worker
  #   command: celery -A backproject worker --loglevel=info
  #   environment:
  #     - REDIS_HOST=${REDIS_HOST}
  #     - REDIS_PORT=${REDIS_PORT}
  #     - RABBIT_HOST=${RABBIT_HOST}
  #     - RABBIT_PORT=${RABBIT_PORT}
  #     - PROJECT_ID=${PROJECT_ID}
  #     - TOPIC_ID=${TOPIC_ID}
  #     - SUBSCRIPTION_ID=${SUBSCRIPTION_ID}
  #   depends_on:
  #     web:
  #       condition: service_started
  #     redis:
  #       condition: service_started
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  # rabbitmq:
  #   image: rabbitmq:management
  #   ports:
  #     - "15672:15672"
  #     - "5672:5672"
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
  #     interval: 30s
  #     timeout: 30s
  #     retries: 5
  #     start_period: 30s
  #   restart: always

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  # rabbitmq-data:
