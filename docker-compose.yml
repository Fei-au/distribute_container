services:
  web:
    image: feiff/bkproj
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  celery_worker:
    image: feiff/celery_worker
    command: celery -A backproject worker --loglevel=info
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  rabbitmq-data:
